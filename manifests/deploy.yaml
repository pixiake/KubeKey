apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: kubekey-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: clusters.kubekey.kubesphere.io
spec:
  group: kubekey.kubesphere.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              addons:
                items:
                  properties:
                    delay:
                      type: integer
                    name:
                      type: string
                    namespace:
                      type: string
                    retries:
                      type: integer
                    sources:
                      properties:
                        chart:
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                            repo:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                            valuesFile:
                              type: string
                            version:
                              type: string
                          type: object
                        yaml:
                          properties:
                            path:
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint defines the control plane endpoint information for cluster.
                properties:
                  address:
                    type: string
                  domain:
                    type: string
                  internalLoadbalancer:
                    type: string
                  port:
                    type: integer
                type: object
              hosts:
                description: Foo is an example field of Cluster. Edit Cluster_types.go to remove/update
                items:
                  description: HostCfg defines host information for cluster.
                  properties:
                    address:
                      type: string
                    arch:
                      type: string
                    id:
                      type: string
                    internalAddress:
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    password:
                      type: string
                    port:
                      type: integer
                    privateKey:
                      type: string
                    privateKeyPath:
                      type: string
                    user:
                      type: string
                  type: object
                type: array
              kubernetes:
                properties:
                  apiserverArgs:
                    items:
                      type: string
                    type: array
                  apiserverCertExtraSans:
                    items:
                      type: string
                    type: array
                  clusterName:
                    type: string
                  containerManager:
                    type: string
                  containerRuntimeEndpoint:
                    type: string
                  controllerManagerArgs:
                    items:
                      type: string
                    type: array
                  etcdBackupDir:
                    type: string
                  etcdBackupPeriod:
                    type: integer
                  etcdBackupScript:
                    type: string
                  keepBackupNumber:
                    type: integer
                  kubeProxyArgs:
                    items:
                      type: string
                    type: array
                  kubeProxyConfiguration:
                    type: object
                  kubeletArgs:
                    items:
                      type: string
                    type: array
                  kubeletConfiguration:
                    type: object
                  masqueradeAll:
                    type: boolean
                  maxPods:
                    type: integer
                  nodeCidrMaskSize:
                    type: integer
                  nodelocaldns:
                    type: boolean
                  proxyMode:
                    type: string
                  schedulerArgs:
                    items:
                      type: string
                    type: array
                  type:
                    type: string
                  version:
                    type: string
                type: object
              kubesphere:
                description: KubeSphere defines the configuration information of the KubeSphere.
                properties:
                  configurations:
                    type: string
                  enabled:
                    type: boolean
                  version:
                    type: string
                type: object
              network:
                properties:
                  calico:
                    properties:
                      ipipMode:
                        type: string
                      vethMTU:
                        type: integer
                      vxlanMode:
                        type: string
                    type: object
                  flannel:
                    properties:
                      backendMode:
                        type: string
                      directRouting:
                        type: boolean
                    type: object
                  kubePodsCIDR:
                    type: string
                  kubeServiceCIDR:
                    type: string
                  kubeovn:
                    properties:
                      dpdkMode:
                        type: boolean
                      dpdkVersion:
                        type: string
                      enableMirror:
                        type: boolean
                      enableSSL:
                        type: boolean
                      hwOffload:
                        type: boolean
                      iface:
                        type: string
                      joinCIDR:
                        type: string
                      label:
                        type: string
                      networkType:
                        type: string
                      pingerExternalAddress:
                        type: string
                      pingerExternalDomain:
                        type: string
                      vlanID:
                        type: string
                      vlanInterfaceName:
                        type: string
                    type: object
                  plugin:
                    type: string
                type: object
              registry:
                description: RegistryConfig defines the configuration information of the image's repository.
                properties:
                  insecureRegistries:
                    items:
                      type: string
                    type: array
                  privateRegistry:
                    type: string
                  registryMirrors:
                    items:
                      type: string
                    type: array
                type: object
              roleGroups:
                description: RoleGroups defines the grouping of role for hosts (etcd / master / worker).
                properties:
                  etcd:
                    items:
                      type: string
                    type: array
                  master:
                    items:
                      type: string
                    type: array
                  worker:
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              Conditions:
                items:
                  description: Condition defines the process information.
                  properties:
                    endTime:
                      format: date-time
                      type: string
                    startTime:
                      format: date-time
                      type: string
                    status:
                      type: boolean
                    step:
                      type: string
                  type: object
                type: array
              etcdCount:
                type: integer
              jobInfo:
                description: JobInfo defines the job information to be used to create a cluster or add a node.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  pods:
                    items:
                      description: PodInfo defines the pod information to be used to create a cluster or add a node.
                      properties:
                        containers:
                          items:
                            description: ContainerInfo defines the container information to be used to create a cluster or add a node.
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              masterCount:
                type: integer
              networkPlugin:
                type: string
              nodes:
                items:
                  description: NodeStatus defines the status information of the nodes in the cluster.
                  properties:
                    hostname:
                      type: string
                    internalIP:
                      type: string
                    roles:
                      additionalProperties:
                        type: boolean
                      type: object
                  type: object
                type: array
              nodesCount:
                type: integer
              version:
                type: string
              workerCount:
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              addons:
                items:
                  properties:
                    delay:
                      type: integer
                    name:
                      type: string
                    namespace:
                      type: string
                    retries:
                      type: integer
                    sources:
                      properties:
                        chart:
                          properties:
                            name:
                              type: string
                            path:
                              type: string
                            repo:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                            valuesFile:
                              type: string
                            version:
                              type: string
                          type: object
                        yaml:
                          properties:
                            path:
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                  type: object
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint defines the control plane endpoint information for cluster.
                properties:
                  address:
                    type: string
                  domain:
                    type: string
                  internalLoadbalancer:
                    type: string
                  port:
                    type: integer
                type: object
              etcd:
                properties:
                  backupDir:
                    type: string
                  backupPeriod:
                    type: integer
                  backupScript:
                    type: string
                  external:
                    description: ExternalEtcd describes how to connect to an external etcd cluster when type is set to external
                    properties:
                      caFile:
                        description: CAFile is an SSL Certificate Authority file used to secure etcd communication.
                        type: string
                      certFile:
                        description: CertFile is an SSL certification file used to secure etcd communication.
                        type: string
                      endpoints:
                        description: Endpoints of etcd members. Useful for using external etcd. If not provided, kubeadm will run etcd in a static pod.
                        items:
                          type: string
                        type: array
                      keyFile:
                        description: KeyFile is an SSL key file used to secure etcd communication.
                        type: string
                    type: object
                  keepBackupNumber:
                    type: integer
                  type:
                    description: Type of etcd cluster, can be set to 'kubekey' 'kubeadm' 'external'
                    type: string
                type: object
              hosts:
                description: Foo is an example field of Cluster. Edit Cluster_types.go to remove/update
                items:
                  description: HostCfg defines host information for cluster.
                  properties:
                    address:
                      type: string
                    arch:
                      type: string
                    internalAddress:
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels defines the kubernetes labels for the node.
                      type: object
                    name:
                      type: string
                    password:
                      type: string
                    port:
                      type: integer
                    privateKey:
                      type: string
                    privateKeyPath:
                      type: string
                    user:
                      type: string
                  type: object
                type: array
              kubernetes:
                description: Kubernetes contains the configuration for the cluster
                properties:
                  apiserverArgs:
                    items:
                      type: string
                    type: array
                  apiserverCertExtraSans:
                    items:
                      type: string
                    type: array
                  clusterName:
                    type: string
                  containerManager:
                    type: string
                  containerRuntimeEndpoint:
                    type: string
                  controllerManagerArgs:
                    items:
                      type: string
                    type: array
                  dnsDomain:
                    type: string
                  featureGates:
                    additionalProperties:
                      type: boolean
                    type: object
                  kata:
                    description: Kata contains the configuration for the kata in cluster
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  kubeProxyArgs:
                    items:
                      type: string
                    type: array
                  kubeProxyConfiguration:
                    type: object
                  kubeletArgs:
                    items:
                      type: string
                    type: array
                  kubeletConfiguration:
                    type: object
                  masqueradeAll:
                    type: boolean
                  maxPods:
                    type: integer
                  nodeCidrMaskSize:
                    type: integer
                  nodeFeatureDiscovery:
                    description: NodeFeatureDiscovery contains the configuration for the node-feature-discovery in cluster
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  nodelocaldns:
                    type: boolean
                  proxyMode:
                    type: string
                  schedulerArgs:
                    items:
                      type: string
                    type: array
                  type:
                    type: string
                  version:
                    type: string
                type: object
              kubesphere:
                description: KubeSphere defines the configuration information of the KubeSphere.
                properties:
                  configurations:
                    type: string
                  enabled:
                    type: boolean
                  version:
                    type: string
                type: object
              network:
                properties:
                  calico:
                    properties:
                      ipipMode:
                        type: string
                      vethMTU:
                        type: integer
                      vxlanMode:
                        type: string
                    type: object
                  flannel:
                    properties:
                      backendMode:
                        type: string
                      directRouting:
                        type: boolean
                    type: object
                  kubePodsCIDR:
                    type: string
                  kubeServiceCIDR:
                    type: string
                  kubeovn:
                    properties:
                      dpdkMode:
                        type: boolean
                      dpdkVersion:
                        type: string
                      enableMirror:
                        type: boolean
                      enableSSL:
                        type: boolean
                      hwOffload:
                        type: boolean
                      iface:
                        type: string
                      joinCIDR:
                        type: string
                      label:
                        type: string
                      networkType:
                        type: string
                      pingerExternalAddress:
                        type: string
                      pingerExternalDomain:
                        type: string
                      vlanID:
                        type: string
                      vlanInterfaceName:
                        type: string
                    type: object
                  multusCNI:
                    properties:
                      enabled:
                        type: boolean
                    type: object
                  plugin:
                    type: string
                type: object
              registry:
                description: RegistryConfig defines the configuration information of the image's repository.
                properties:
                  auths:
                    type: object
                  insecureRegistries:
                    items:
                      type: string
                    type: array
                  namespaceOverride:
                    type: string
                  plainHTTP:
                    type: boolean
                  privateRegistry:
                    type: string
                  registryMirrors:
                    items:
                      type: string
                    type: array
                  type:
                    type: string
                type: object
              roleGroups:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              system:
                description: System defines the system config for each node in cluster.
                properties:
                  ntpServers:
                    items:
                      type: string
                    type: array
                  timezone:
                    type: string
                type: object
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              Conditions:
                items:
                  description: Condition defines the process information.
                  properties:
                    endTime:
                      format: date-time
                      type: string
                    event:
                      additionalProperties:
                        properties:
                          message:
                            type: string
                          status:
                            type: string
                          step:
                            type: string
                        type: object
                      type: object
                    startTime:
                      format: date-time
                      type: string
                    status:
                      type: boolean
                    step:
                      type: string
                  type: object
                type: array
              etcdCount:
                type: integer
              jobInfo:
                description: JobInfo defines the job information to be used to create a cluster or add a node.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  pods:
                    items:
                      description: PodInfo defines the pod information to be used to create a cluster or add a node.
                      properties:
                        containers:
                          items:
                            description: ContainerInfo defines the container information to be used to create a cluster or add a node.
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              masterCount:
                type: integer
              networkPlugin:
                type: string
              nodes:
                items:
                  description: NodeStatus defines the status information of the nodes in the cluster.
                  properties:
                    hostname:
                      type: string
                    internalIP:
                      type: string
                    roles:
                      additionalProperties:
                        type: boolean
                      type: object
                  type: object
                type: array
              nodesCount:
                type: integer
              piplineInfo:
                description: PiplineInfo define the pipline information for operating cluster.
                properties:
                  status:
                    description: Running or Terminated
                    type: string
                type: object
              version:
                type: string
              workerCount:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: manifests.kubekey.kubesphere.io
spec:
  group: kubekey.kubesphere.io
  names:
    kind: Manifest
    listKind: ManifestList
    plural: manifests
    singular: manifest
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Manifest is the Schema for the manifests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ManifestSpec defines the desired state of Manifest
            properties:
              arches:
                items:
                  type: string
                type: array
              components:
                properties:
                  cni:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                  containerRuntimes:
                    items:
                      properties:
                        type:
                          type: string
                        version:
                          type: string
                      required:
                      - type
                      - version
                      type: object
                    type: array
                  crictl:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                  docker-compose:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                  docker-registry:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                  etcd:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                  harbor:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                  helm:
                    properties:
                      version:
                        type: string
                    required:
                    - version
                    type: object
                required:
                - cni
                - containerRuntimes
                - docker-compose
                - docker-registry
                - etcd
                - harbor
                - helm
                type: object
              images:
                items:
                  type: string
                type: array
              kubernetesDistributions:
                items:
                  properties:
                    type:
                      type: string
                    version:
                      type: string
                  required:
                  - type
                  - version
                  type: object
                type: array
              operatingSystems:
                items:
                  properties:
                    arch:
                      type: string
                    id:
                      type: string
                    osImage:
                      type: string
                    repository:
                      properties:
                        iso:
                          properties:
                            localPath:
                              type: string
                            url:
                              type: string
                          required:
                          - localPath
                          - url
                          type: object
                      required:
                      - iso
                      type: object
                    type:
                      type: string
                    version:
                      type: string
                  required:
                  - arch
                  - id
                  - osImage
                  - repository
                  - version
                  type: object
                type: array
              registry:
                properties:
                  auths:
                    type: object
                type: object
            required:
            - arches
            - components
            - images
            - kubernetesDistributions
            - operatingSystems
            - registry
            type: object
          status:
            description: ManifestStatus defines the observed state of Manifest
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubekey-controller-manager
  namespace: kubekey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubekey-leader-election-role
  namespace: kubekey-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubekey-manager-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - auditing.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - autoscaling
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - certificates.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - cluster.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - config.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - devops.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - events.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - extensions
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - iam.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - installer.kubesphere.io
  resources:
  - clusterconfigurations
  verbs:
  - '*'
- apiGroups:
  - jaegertracing.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - kubekey.kubesphere.io
  resources:
  - clusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kubekey.kubesphere.io
  resources:
  - clusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - logging.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - networking.istio.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - notification.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - policy
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - storage.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - storage.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - tenant.kubesphere.io
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubekey-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubekey-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubekey-leader-election-rolebinding
  namespace: kubekey-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubekey-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubekey-controller-manager
  namespace: kubekey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubekey-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubekey-manager-role
subjects:
- kind: ServiceAccount
  name: kubekey-controller-manager
  namespace: kubekey-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubekey-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubekey-proxy-role
subjects:
- kind: ServiceAccount
  name: kubekey-controller-manager
  namespace: kubekey-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: cb659ce9.kubesphere.io
kind: ConfigMap
metadata:
  name: kubekey-manager-config
  namespace: kubekey-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kubekey-controller-manager-metrics-service
  namespace: kubekey-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kubekey-controller-manager
  namespace: kubekey-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: kubesphere/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - ./manager
        image: kubespheredev/kubekey:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsUser: 1000
      serviceAccountName: kubekey-controller-manager
      terminationGracePeriodSeconds: 10
