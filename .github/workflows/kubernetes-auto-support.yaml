---
name: Kubernetes-Auto-Support

#on:
#  schedule:
#    - cron: '16 9 * * *'

on:
  issues:
    types: [opened, edited]

jobs:
  update-kubernetes-version:
    runs-on: ubuntu-latest
#    if: github.repository	== 'kubesphere/kubekey'
    steps:
      - uses: actions/checkout@v2

      - name: install dependiencies
        run: |
          sudo apt update
          sudo apt install skopeo -y 
          pip install natsort qsctl

      - name: update components.json
        id: get_new_version
        run: |
          chmod +x hack/auto-update-version.py
          hack/auto-update-version.py
          [ -f version.tmp ] && echo "UPDATE_VERSION=need" >> $GITHUB_OUTPUT
          ls

      - name: sync kubernetes
        id: sync_kubernetes
        run: |
          echo ${{ steps.get_new_version.outputs.UPDATE_VERSION }} 
          ls
          for v in $(cat version.tmp)
          do
            KUBERNETES_VERSION=$v QSCTL_ACCESS_KEY_ID=${{ secrets.QSCTL_ACCESS_KEY_ID }} QSCTL_SECRET_ACCESS_KEY=${{secrets.QSCTL_SECRET_ACCESS_KEY}} DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} DOCKERHUB_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }} ALIYUNCS_USERNAME=${{ secrets.ALIYUNCS_USERNAME }} ALIYUNCS_PASSWORD=${{ secrets.ALIYUNCS_PASSWORD }} bash hack/sync-components.sh
          done
          echo "NEW_VERSION=`cat version.tmp | tr '\n' ', '`" >> $GITHUB_OUTPUT
          rm -rf version.tmp
        if: steps.get_new_version.outputs.UPDATE_VERSION == 'needed'

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Add new kubernetes version
          committer: GitHub <noreply@github.com>
          signoff: false
          branch: new_version
          delete-branch: true
          title: 'Add new kubernetes version'
          body: |
            Update kubernetes version: ${{ steps.sync_kubernetes.outputs.NEW_VERSION }}

        if: steps.get_new_version.outputs.UPDATE_VERSION == 'need'
