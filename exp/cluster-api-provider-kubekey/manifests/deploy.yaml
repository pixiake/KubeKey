apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    control-plane: controller-manager
  name: capkk-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.1
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    cluster.x-k8s.io/v1beta1: v1beta1
  name: kkclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KKCluster
    listKind: KKClusterList
    plural: kkclusters
    shortNames:
    - kkc
    singular: kkcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this KKClusters belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for SSH instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: API Endpoint
      jsonPath: .spec.controlPlaneEndpoint
      name: Endpoint
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KKCluster is the Schema for the kkclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KKClusterSpec defines the desired state of KKCluster
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer is optional configuration for
                  customizing control plane behavior.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                type: object
              nodes:
                description: Nodes represents the information about the nodes available
                  to the cluster
                properties:
                  auth:
                    description: Auth is the SSH authentication information of all
                      instance. It is a global auth configuration.
                    properties:
                      password:
                        description: Password is the password for SSH authentication.
                        type: string
                      port:
                        description: Port is the port for SSH authentication.
                        type: integer
                      privateKey:
                        description: PrivateKey is the value of the private key for
                          SSH authentication.
                        type: string
                      privateKeyPath:
                        description: PrivateKeyFile is the path to the private key
                          for SSH authentication.
                        type: string
                      timeout:
                        description: Timeout is the timeout for establish an SSH connection.
                        format: int64
                        type: integer
                      user:
                        description: User is the username for SSH authentication.
                        type: string
                    type: object
                  containerManager:
                    description: ContainerManager is the container manager config
                      of all instance. It is a global container manager configuration.
                    properties:
                      criSocket:
                        description: CRISocket is used to connect an existing CRIClient.
                        type: string
                      type:
                        description: Type defines the type of ContainerManager. "docker",
                          "containerd"
                        type: string
                      version:
                        description: Version defines the version of ContainerManager.
                        type: string
                    type: object
                  instances:
                    description: Instances defines all instance contained in kkcluster.
                    items:
                      description: KKInstanceSpec defines the desired state of KKInstance
                      properties:
                        address:
                          description: Address is the IP address of the machine.
                          type: string
                        arch:
                          description: Arch is the architecture of the machine. e.g.
                            "amd64", "arm64".
                          type: string
                        auth:
                          description: Auth is the SSH authentication information
                            of this machine. It will override the global auth configuration.
                          properties:
                            password:
                              description: Password is the password for SSH authentication.
                              type: string
                            port:
                              description: Port is the port for SSH authentication.
                              type: integer
                            privateKey:
                              description: PrivateKey is the value of the private
                                key for SSH authentication.
                              type: string
                            privateKeyPath:
                              description: PrivateKeyFile is the path to the private
                                key for SSH authentication.
                              type: string
                            timeout:
                              description: Timeout is the timeout for establish an
                                SSH connection.
                              format: int64
                              type: integer
                            user:
                              description: User is the username for SSH authentication.
                              type: string
                          type: object
                        containerManager:
                          description: ContainerManager is the container manager config
                            of this machine.
                          properties:
                            criSocket:
                              description: CRISocket is used to connect an existing
                                CRIClient.
                              type: string
                            type:
                              description: Type defines the type of ContainerManager.
                                "docker", "containerd"
                              type: string
                            version:
                              description: Version defines the version of ContainerManager.
                              type: string
                          type: object
                        internalAddress:
                          description: InternalAddress is the internal IP address
                            of the machine.
                          type: string
                        name:
                          description: Name is the host name of the machine.
                          minLength: 1
                          type: string
                        roles:
                          description: Roles is the role of the machine.
                          items:
                            description: Role represents a role of a node.
                            type: string
                          type: array
                      type: object
                    type: array
                required:
                - instances
                type: object
              registry:
                description: Registry represents the cluster image registry used to
                  pull the images.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  auth:
                    description: Auth defines the auth of this PrivateRegistry.
                    properties:
                      caFile:
                        description: CAFile is an SSL Certificate Authority file used
                          to secure etcd communication.
                        type: string
                      certFile:
                        description: CertFile is an SSL certification file used to
                          secure etcd communication.
                        type: string
                      certsPath:
                        description: CertsPath defines the path of the certs files
                          of this PrivateRegistry.
                        type: string
                      insecureSkipVerify:
                        description: InsecureSkipVerify allow contacting this PrivateRegistry
                          over HTTPS with failed TLS verification.
                        type: boolean
                      keyFile:
                        description: KeyFile is an SSL key file used to secure etcd
                          communication.
                        type: string
                      password:
                        description: Password defines the password of this PrivateRegistry.
                        type: string
                      plainHTTP:
                        description: PlainHTTP allow contacting this PrivateRegistry
                          over HTTP.
                        type: boolean
                      username:
                        description: Username defines the username of this PrivateRegistry.
                        type: string
                    required:
                    - certsPath
                    - insecureSkipVerify
                    - password
                    - plainHTTP
                    - username
                    type: object
                  insecureRegistries:
                    description: InsecureRegistries defines the insecure registries
                      of ContainerManager.
                    items:
                      type: string
                    type: array
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  namespaceOverride:
                    description: NamespaceOverride defines the namespace override
                      of this PrivateRegistry.
                    type: string
                  privateRegistry:
                    description: PrivateRegistry defines the private registry address
                      of ContainerManager.
                    type: string
                  registryMirrors:
                    description: RegistryMirrors defines the registry mirrors of this
                      PrivateRegistry.
                    items:
                      type: string
                    type: array
                required:
                - auth
                - namespaceOverride
                - privateRegistry
                type: object
              zone:
                description: 'ZONE is the zone of the KKCluster where can get the
                  binaries. If you have problem to access https://storage.googleapis.com,
                  you can set "zone: cn".'
                type: string
            required:
            - nodes
            type: object
          status:
            description: KKClusterStatus defines the observed state of KKCluster
            properties:
              conditions:
                description: Conditions defines current service state of the KKMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              ready:
                default: false
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.1
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    cluster.x-k8s.io/v1beta1: v1beta1
  name: kkclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KKClusterTemplate
    listKind: KKClusterTemplateList
    plural: kkclustertemplates
    shortNames:
    - kkct
    singular: kkclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of KKClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KKClusterTemplate is the Schema for the kkclustertemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KKClusterTemplateSpec defines the desired state of KKClusterTemplate
            properties:
              template:
                description: KKClusterTemplateResource Standard object's metadata
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: KKClusterSpec defines the desired state of KKCluster
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      controlPlaneLoadBalancer:
                        description: ControlPlaneLoadBalancer is optional configuration
                          for customizing control plane behavior.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                        type: object
                      nodes:
                        description: Nodes represents the information about the nodes
                          available to the cluster
                        properties:
                          auth:
                            description: Auth is the SSH authentication information
                              of all instance. It is a global auth configuration.
                            properties:
                              password:
                                description: Password is the password for SSH authentication.
                                type: string
                              port:
                                description: Port is the port for SSH authentication.
                                type: integer
                              privateKey:
                                description: PrivateKey is the value of the private
                                  key for SSH authentication.
                                type: string
                              privateKeyPath:
                                description: PrivateKeyFile is the path to the private
                                  key for SSH authentication.
                                type: string
                              timeout:
                                description: Timeout is the timeout for establish
                                  an SSH connection.
                                format: int64
                                type: integer
                              user:
                                description: User is the username for SSH authentication.
                                type: string
                            type: object
                          containerManager:
                            description: ContainerManager is the container manager
                              config of all instance. It is a global container manager
                              configuration.
                            properties:
                              criSocket:
                                description: CRISocket is used to connect an existing
                                  CRIClient.
                                type: string
                              type:
                                description: Type defines the type of ContainerManager.
                                  "docker", "containerd"
                                type: string
                              version:
                                description: Version defines the version of ContainerManager.
                                type: string
                            type: object
                          instances:
                            description: Instances defines all instance contained
                              in kkcluster.
                            items:
                              description: KKInstanceSpec defines the desired state
                                of KKInstance
                              properties:
                                address:
                                  description: Address is the IP address of the machine.
                                  type: string
                                arch:
                                  description: Arch is the architecture of the machine.
                                    e.g. "amd64", "arm64".
                                  type: string
                                auth:
                                  description: Auth is the SSH authentication information
                                    of this machine. It will override the global auth
                                    configuration.
                                  properties:
                                    password:
                                      description: Password is the password for SSH
                                        authentication.
                                      type: string
                                    port:
                                      description: Port is the port for SSH authentication.
                                      type: integer
                                    privateKey:
                                      description: PrivateKey is the value of the
                                        private key for SSH authentication.
                                      type: string
                                    privateKeyPath:
                                      description: PrivateKeyFile is the path to the
                                        private key for SSH authentication.
                                      type: string
                                    timeout:
                                      description: Timeout is the timeout for establish
                                        an SSH connection.
                                      format: int64
                                      type: integer
                                    user:
                                      description: User is the username for SSH authentication.
                                      type: string
                                  type: object
                                containerManager:
                                  description: ContainerManager is the container manager
                                    config of this machine.
                                  properties:
                                    criSocket:
                                      description: CRISocket is used to connect an
                                        existing CRIClient.
                                      type: string
                                    type:
                                      description: Type defines the type of ContainerManager.
                                        "docker", "containerd"
                                      type: string
                                    version:
                                      description: Version defines the version of
                                        ContainerManager.
                                      type: string
                                  type: object
                                internalAddress:
                                  description: InternalAddress is the internal IP
                                    address of the machine.
                                  type: string
                                name:
                                  description: Name is the host name of the machine.
                                  minLength: 1
                                  type: string
                                roles:
                                  description: Roles is the role of the machine.
                                  items:
                                    description: Role represents a role of a node.
                                    type: string
                                  type: array
                              type: object
                            type: array
                        required:
                        - instances
                        type: object
                      registry:
                        description: Registry represents the cluster image registry
                          used to pull the images.
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema
                              of this representation of an object. Servers should
                              convert recognized schemas to the latest internal value,
                              and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          auth:
                            description: Auth defines the auth of this PrivateRegistry.
                            properties:
                              caFile:
                                description: CAFile is an SSL Certificate Authority
                                  file used to secure etcd communication.
                                type: string
                              certFile:
                                description: CertFile is an SSL certification file
                                  used to secure etcd communication.
                                type: string
                              certsPath:
                                description: CertsPath defines the path of the certs
                                  files of this PrivateRegistry.
                                type: string
                              insecureSkipVerify:
                                description: InsecureSkipVerify allow contacting this
                                  PrivateRegistry over HTTPS with failed TLS verification.
                                type: boolean
                              keyFile:
                                description: KeyFile is an SSL key file used to secure
                                  etcd communication.
                                type: string
                              password:
                                description: Password defines the password of this
                                  PrivateRegistry.
                                type: string
                              plainHTTP:
                                description: PlainHTTP allow contacting this PrivateRegistry
                                  over HTTP.
                                type: boolean
                              username:
                                description: Username defines the username of this
                                  PrivateRegistry.
                                type: string
                            required:
                            - certsPath
                            - insecureSkipVerify
                            - password
                            - plainHTTP
                            - username
                            type: object
                          insecureRegistries:
                            description: InsecureRegistries defines the insecure registries
                              of ContainerManager.
                            items:
                              type: string
                            type: array
                          kind:
                            description: 'Kind is a string value representing the
                              REST resource this object represents. Servers may infer
                              this from the endpoint the client submits requests to.
                              Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          namespaceOverride:
                            description: NamespaceOverride defines the namespace override
                              of this PrivateRegistry.
                            type: string
                          privateRegistry:
                            description: PrivateRegistry defines the private registry
                              address of ContainerManager.
                            type: string
                          registryMirrors:
                            description: RegistryMirrors defines the registry mirrors
                              of this PrivateRegistry.
                            items:
                              type: string
                            type: array
                        required:
                        - auth
                        - namespaceOverride
                        - privateRegistry
                        type: object
                      zone:
                        description: 'ZONE is the zone of the KKCluster where can
                          get the binaries. If you have problem to access https://storage.googleapis.com,
                          you can set "zone: cn".'
                        type: string
                    required:
                    - nodes
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.1
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    cluster.x-k8s.io/v1beta1: v1beta1
  name: kkinstances.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KKInstance
    listKind: KKInstanceList
    plural: kkinstances
    shortNames:
    - kki
    singular: kkinstance
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: kubekey instance hostname
      jsonPath: .spec.name
      name: Hostname
      type: string
    - description: kubekey instance address
      jsonPath: .spec.address
      name: Address
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KKInstance is the Schema for the kkinstances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KKInstanceSpec defines the desired state of KKInstance
            properties:
              address:
                description: Address is the IP address of the machine.
                type: string
              arch:
                description: Arch is the architecture of the machine. e.g. "amd64",
                  "arm64".
                type: string
              auth:
                description: Auth is the SSH authentication information of this machine.
                  It will override the global auth configuration.
                properties:
                  password:
                    description: Password is the password for SSH authentication.
                    type: string
                  port:
                    description: Port is the port for SSH authentication.
                    type: integer
                  privateKey:
                    description: PrivateKey is the value of the private key for SSH
                      authentication.
                    type: string
                  privateKeyPath:
                    description: PrivateKeyFile is the path to the private key for
                      SSH authentication.
                    type: string
                  timeout:
                    description: Timeout is the timeout for establish an SSH connection.
                    format: int64
                    type: integer
                  user:
                    description: User is the username for SSH authentication.
                    type: string
                type: object
              containerManager:
                description: ContainerManager is the container manager config of this
                  machine.
                properties:
                  criSocket:
                    description: CRISocket is used to connect an existing CRIClient.
                    type: string
                  type:
                    description: Type defines the type of ContainerManager. "docker",
                      "containerd"
                    type: string
                  version:
                    description: Version defines the version of ContainerManager.
                    type: string
                type: object
              internalAddress:
                description: InternalAddress is the internal IP address of the machine.
                type: string
              name:
                description: Name is the host name of the machine.
                minLength: 1
                type: string
              roles:
                description: Roles is the role of the machine.
                items:
                  description: Role represents a role of a node.
                  type: string
                type: array
            type: object
          status:
            description: KKInstanceStatus defines the observed state of KKInstance
            properties:
              conditions:
                description: Conditions defines current service state of the KKMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              instanceState:
                description: The current state of the instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.1
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    cluster.x-k8s.io/v1beta1: v1beta1
  name: kkmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: KKMachine
    listKind: KKMachineList
    plural: kkmachines
    shortNames:
    - kkm
    singular: kkmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this KKMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: KKInstance name
      jsonPath: .spec.instanceID
      name: Instance
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Machine object which owns with this KKMachine
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KKMachine is the Schema for the kkmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KKMachineSpec defines the desired state of KKMachine
            properties:
              containerManager:
                description: ContainerManager is the container manager config of this
                  machine.
                properties:
                  criSocket:
                    description: CRISocket is used to connect an existing CRIClient.
                    type: string
                  type:
                    description: Type defines the type of ContainerManager. "docker",
                      "containerd"
                    type: string
                  version:
                    description: Version defines the version of ContainerManager.
                    type: string
                type: object
              instanceID:
                type: string
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  kubekey provider.
                type: string
              roles:
                description: Roles is the role of the machine.
                items:
                  description: Role represents a role of a node.
                  type: string
                type: array
            type: object
          status:
            description: KKMachineStatus defines the observed state of KKMachine
            properties:
              addresses:
                description: Addresses contains the KK instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the KKMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              instanceState:
                description: InstanceState is the state of the KK instance for this
                  machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.1
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    cluster.x-k8s.io/v1beta1: v1beta1
  name: kkmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: KKMachineTemplate
    listKind: KKMachineTemplateList
    plural: kkmachinetemplates
    singular: kkmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: KKMachineTemplate is the Schema for the kkmachinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KKMachineTemplateSpec defines the desired state of KKMachineTemplate
            properties:
              template:
                description: KKMachineTemplateResource describes the data needed to
                  create am KKMachine from a template.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      containerManager:
                        description: ContainerManager is the container manager config
                          of this machine.
                        properties:
                          criSocket:
                            description: CRISocket is used to connect an existing
                              CRIClient.
                            type: string
                          type:
                            description: Type defines the type of ContainerManager.
                              "docker", "containerd"
                            type: string
                          version:
                            description: Version defines the version of ContainerManager.
                            type: string
                        type: object
                      instanceID:
                        type: string
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the kubekey provider.
                        type: string
                      roles:
                        description: Roles is the role of the machine.
                        items:
                          description: Role represents a role of a node.
                          type: string
                        type: array
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-controller-manager
  namespace: capkk-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-leader-election-role
  namespace: capkk-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkinstances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkinstances/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkinstances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkmachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkmachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kkmachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-leader-election-rolebinding
  namespace: capkk-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capkk-leader-election-role
subjects:
- kind: ServiceAccount
  name: capkk-controller-manager
  namespace: capkk-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capkk-manager-role
subjects:
- kind: ServiceAccount
  name: capkk-controller-manager
  namespace: capkk-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capkk-proxy-role
subjects:
- kind: ServiceAccount
  name: capkk-controller-manager
  namespace: capkk-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    control-plane: controller-manager
  name: capkk-controller-manager-metrics-service
  namespace: capkk-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-kk
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-webhook-service
  namespace: capkk-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-kk
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
    control-plane: controller-manager
  name: capkk-controller-manager
  namespace: capkk-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-kk
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        cluster.x-k8s.io/provider: infrastructure-kk
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --v=5
        image: docker.io/kubespheredev/capkk-manager:e2e
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccountName: capkk-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capkk-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-serving-cert
  namespace: capkk-system
spec:
  dnsNames:
  - capkk-webhook-service.capkk-system.svc
  - capkk-webhook-service.capkk-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capkk-selfsigned-issuer
  secretName: capkk-webhook-service-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-selfsigned-issuer
  namespace: capkk-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capkk-system/capkk-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: capkk-webhook-service
      namespace: capkk-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-kkcluster
  failurePolicy: Fail
  name: default.kkcluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kkclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: capkk-webhook-service
      namespace: capkk-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1beta1-kkclustertemplate
  failurePolicy: Fail
  name: default.kkclustertemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kkclustertemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capkk-system/capkk-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-kk
  name: capkk-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: capkk-webhook-service
      namespace: capkk-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-kkcluster
  failurePolicy: Fail
  name: validation.kkcluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kkclusters
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: capkk-webhook-service
      namespace: capkk-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1beta1-kkclustertemplate
  failurePolicy: Fail
  name: validation.kkclustertemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kkclustertemplates
  sideEffects: None
