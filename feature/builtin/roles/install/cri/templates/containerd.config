version = 2

root = {{ cri.containerd.data_root|default_if_none:"/var/lib/containerd" }}
state = "/run/containerd"

[grpc]
  address = "/run/containerd/containerd.sock"
  uid = 0
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216

[ttrpc]
  address = ""
  uid = 0
  gid = 0

[debug]
  address = ""
  uid = 0
  gid = 0
  level = ""

[metrics]
  address = ""
  grpc_histogram = false

[cgroup]
  path = ""

[timeouts]
  "io.containerd.timeout.shim.cleanup" = "5s"
  "io.containerd.timeout.shim.load" = "5s"
  "io.containerd.timeout.shim.shutdown" = "3s"
  "io.containerd.timeout.task.state" = "2s"

[plugins]
  [plugins."io.containerd.grpc.v1.cri"]
    sandbox_image = "{{ cri.sandbox_image }}"
    [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
      runtime_type = "io.containerd.runc.v2"
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
        SystemdCgroup = {% if (cri.cgroup_driver=="systemd") %}true{% else %}false{% endif %}
    [plugins."io.containerd.grpc.v1.cri".cni]
      bin_dir = "/opt/cni/bin"
      conf_dir = "/etc/cni/net.d"
      max_conf_num = 1
      conf_template = ""
    [plugins."io.containerd.grpc.v1.cri".registry]
      [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
        {% if (cri.registry.mirrors|length > 0) %}
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
          endpoint = {{ cri.registry.mirrors|to_json|safe }}
        {% endif %}
        {% for ir in cri.registry.insecure_registries %}
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors."{{ ir }}"]
          endpoint = ["http://{{ ir }}"]
        {% endfor %}

        {% if (cri.registry.auths|length > 0 || groups['image_registry']|length>0) %}
        [plugins."io.containerd.grpc.v1.cri".registry.configs]
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ image_registry.auth.registry }}".auth]
            username = "{{ image_registry.auth.username }}"
            password = "{{ image_registry.auth.password }}"
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ image_registry.auth.registry }}".tls]
            ca_file = "/etc/containerd/certs.d/{{ image_registry.auth.registry }}/ca.crt"
            cert_file = "/etc/containerd/certs.d/{{ image_registry.auth.registry }}/server.crt"
            key_file = "/etc/containerd/certs.d/{{ image_registry.auth.registry }}/server.key"
          {% for ir in cri.registry.auths %}
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ ir.repo }}".auth]
            username = "{{ ir.username }}"
            password = "{{ ir.password }}"
          {% if (ir.ca_file|defined) %}
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ ir.repo }}".tls]
            ca_file = "{{ ir.ca_file }}"
            cert_file = "{{ ir.crt_file }}"
            key_file = "{{ ir.key_file }}"
            insecure_skip_verify = {{ ir.skip_ssl }}
          {% endif %}
          {% endfor %}
        {% endif %}
